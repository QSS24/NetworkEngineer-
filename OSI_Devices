SimpleOSI.sh
#! /bin/venv/bash 
Set -x && Set -E

cidr  = range(int(0:60)) 
ipadr = { re.match('+random_int(1..255){3}\-\D*{3}\D*{3}'g) }.cidr


Declare Glogal: 
     Varlogs = '/urs/var/syslogs'.logFile
     Devicelogs = '/temp/dev/'.logFile
     BinLogs = '/usr/bin/'.logFile
     Servicelogs = '/usr/initd/'.logFile
     Etclogs = ' /etc/ssh/sshd_config '.logFile 

logFile = " (Date '%Y %M %D %H:M%:%S').log {print $1 ':' $2 ':' $3} | less && sort -nro tail 20 > $logFile.txt "

Daily = SDiff 

Cront -e 
* * 8 * * -exec nohup $All_Devices()

All_Devices() {
     Case $All_Devices in: 
          -f) 
               if 
               fi 
          
          esac 

     Check_Network() { 
          Network_config = ' Netstat -a 
          }

     tempDevices = ${ /usr/*.dev } print{f" $1 ':' $2 ':' $3 "}.log | grep -f in $tempDev } 
         While -z exit

     Check_Router() {
         RouterUP = ' sh router details | less && sort nr -10 print(f" $1 $2 ") '
               { for  $RouterUP do
               }

     Set_VLSM() {
         SetSubnet = { for a, b in $SetSubnet[a|b] do 
                       if a == random_int(1:255) 
         }
     }

     Check_VLAN() {
         CheckLan = ' sh vlan {print $1 $2 \n
                    Assign vlan \n 
                    for etf in $vlan($eth(random(seq 1..10)) 

                   
                    
     }

     Check_Switch() {
         Switches = { show switchport details 
     }

     Check_interfaces() {
        MacAddress = { MaCChanger mac='Random(0-255) seq(1..3)'
     }

}
